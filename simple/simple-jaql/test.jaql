$dirty_earmarks = read(hdfs('UsEarmark.json'));
$earmarks = $dirty_earmarks -> transform {  
	// copies the value of the input record ($)
	$.earmarkId,
	// normalization with built-in function
	amount: long($.amount * 1000),	
	sponsor: { // nested JSON type
		// normalization with user-defined function
		firstName: strToLowerCase($.sponsorFirstName),
		lastName: strToLowerCase($.sponsorLastName),
	},
};

$earmark_sponsors = $earmarks -> group by name = [$.sponsor.firstName, $.sponsor.lastName] into {
	firstName: name[0], 
	lastName: name[1], 
	earmarkId: $[*].earmarkId, 
	// predefined aggregation function on arrays
	addresses: distinct($[*].addresses), 
};

$congress_members = read(hdfs('UsCongress.json')) -> filter $.name != '';

$persons = join member in $congress_members, preserve sponsor in $earmark_sponsors
	where member.lastName == sponsor.lastName and member.firstName == sponsor.firstName
	into {
	member.firstName,
	member.lastName,
	sponsor.earmarkId,
	addresses: distinct(sponsor.addresses + member.addresses)
};

$persons
-> write(hdfs('Persons.json'));


